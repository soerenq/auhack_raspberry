#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('auhack-raspberry:server');
var http = require('http');
var request = require('request');

const uuidV4 = require('uuid/v4');

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '1337');
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

var id = uuidV4();
/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {
        // named pipe
        return val;
    }

    if (port >= 0) {
        // port number
        return port;
    }

    return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);

    //We should already have created specific service type
    var serviceId = "56d68980-24f5-4720-adf0-a5e29de42e52";

    //TODO
    var userId = "56d68980-24f5-4720-adf0-a5e29de42e60";

    var data = {
        id: id,
        ip: addr.ip,
        port: addr.port,
        userId: userId};

    //TODO change to soerenq.com
    request('http://localhost:3000/services(' + serviceId + ')/register', {
        method: "POST",
        json: true,
        body: data
    }, function(error, response, body){
        console.log('error:', error);
        console.log('statusCode:', response && response.statusCode);
        console.log('body:', body);


    })
}
